plugins {
	id 'dev.architectury.loom' version '1.4.386'
}

group = 'oc.cil.ocreloaded'
version = mod_version

archivesBaseName = 'ocreloaded'

loom {
    splitEnvironmentSourceSets()

    mods {
        ocreloaded {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    implementation project(':Minecraft')
}

processResources {
	inputs.property "version", mod_version
    inputs.property "name", mod_name

	filesMatching("fabric.mod.json") {
		expand "version": mod_version, "name": mod_name
	}
}

task copyResources(type: Copy) {
    from project(':Resources').file('src/main/resources')
    into file('build/resources/main')
}

processResources.dependsOn copyResources

task copyMinecraftClasses(type: Copy) {
    from { project(':Minecraft').sourceSets.main.output.classesDirs }
    into { sourceSets.main.output.classesDirs.singleFile }
}
compileJava.dependsOn(copyMinecraftClasses)
copyMinecraftClasses.dependsOn(':Minecraft:compileJava')